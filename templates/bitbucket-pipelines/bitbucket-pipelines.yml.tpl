# Code generated by "welder bitbucket-pipelines"
definitions:
  services:
    docker:
      memory: 3072

  welder: &welder
    size: 2x
    trigger: automatic
    image:
      name: docker-proxy.services.atlassian.com/sox/deng/welder-pbc:latest
      username: buildeng
      password: $PIPELINES_JWT_TOKEN
    services:
      - docker
    artifacts:
      - "**.welder-out/**"
  artifactory-pipe: &artifactory-pipe
    pipe: atlassian/artifactory-sidekick:v1
  artifactory-pipe-sox: &artifactory-pipe-sox
    <<: *artifactory-pipe
    variables:
      COMPLIANT: "true"
  artifactory-init: &artifactory-init source .artifactory/activate.sh

pipelines:
  default:
    - parallel: &build
      {{- $mn := len $.Modules}}{{range $i, $module := $.Modules}}
      - step:
          <<: *welder
          name: Build {{$module.Name}}
          script:
            - *artifactory-pipe
            - *artifactory-init
            - welder make --timestamps -m {{$module.Name}}
            {{- if $module.DoDocker }}
            - welder docker build --timestamps -m {{$module.Name}}
            {{- end }}
      {{- end}}
  branches:
    {{.MainBranch}}:
      - parallel: *build
      {{ if $.HasDockerImages }}
      - parallel:
        {{- $mn := len $.Modules}}{{range $i, $module := $.Modules}}
        {{- if $module.DoDocker }}
        - step:
            <<: *welder
            name: Build and push docker images for {{$module.Name}}
            script:
              - *artifactory-pipe-sox
              - *artifactory-init
              - welder docker build --push --timestamps -m {{$module.Name}} --sox
        {{- end }}
        {{- end}}
      {{- end }}
{{- if $.HasDeployments }}
  {{- if gt (len $.AutoDeployedLocations) 0 }}
      - parallel:
      {{- $mn := len $.AutoDeployedLocations}}
      {{- range $i, $moduleLocation := $.AutoDeployedLocations}}
        {{- $ln := len $moduleLocation.Locations}}
        {{- range $j, $location := $moduleLocation.Locations}}
        - step:
            <<: *welder
            deployment: {{$location.Name}}
            name: Deploy {{$moduleLocation.ModuleName}} to {{$location.Name}}
            trigger: automatic
            script:
              - *artifactory-pipe-sox
              - *artifactory-init
              - mkdir -p .welder-out && welder version print > .welder-out/version
              {{- if $moduleLocation.Module.DoDeploy }}
              - welder deploy --timestamps -e {{ $location.Name }} -m {{ $moduleLocation.ModuleName }} --sox
              {{- else if $moduleLocation.Module.DoMicrosDeploy }}
              - welder micros deploy --timestamps -e {{ $location.Name }} -m {{ $moduleLocation.ModuleName }} --sox
              {{- end }}
        {{- end }}
      {{- end }}
  {{- end }}
  {{- if gt (len $.ManuallyDeployedLocations) 0 }}
    {{- $mn := len $.Locations}}
    {{- range $i, $moduleLocation := $.ManuallyDeployedLocations}}
    {{- $ln := len $moduleLocation.Locations}}
      {{- range $j, $location := $moduleLocation.Locations}}
      - step:
          <<: *welder
          deployment: {{$location.Name}}
          name: Deploy {{$moduleLocation.ModuleName}} to {{$location.Name}}
          trigger: manual
          script:
            - *artifactory-pipe-sox
            - *artifactory-init
            - mkdir -p .welder-out && welder version print > .welder-out/version
            {{- if $moduleLocation.Module.DoDeploy }}
            - welder deploy --timestamps -e {{ $location.Name }} -m {{ $moduleLocation.ModuleName }} --sox
            {{- else if $moduleLocation.Module.DoMicrosDeploy }}
            - welder micros deploy --timestamps -e {{ $location.Name }} -m {{ $moduleLocation.ModuleName }} --sox
            {{- end }}
      {{- end }}
    {{- end }}
  {{- end }}
{{- end }}
